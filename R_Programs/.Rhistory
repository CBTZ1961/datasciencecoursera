install.packages("slidify")
install.packages("ggplot2")
install.packages("devtools")
install.packages("slidify")
install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
?biocLite
biocLite(c("GenomicFeatures", "AnnotationDBI"))
biocLite(c("AnnotationDBi"))
biocLite("AnnotationDbi")
library(ggplot2)
library(devtools)
library(GenomicFeatures)
library(AnnotationDbi)
install.packages("slidify")
search()
pkgs <- c('ramnathv/slidifyLibraries', 'ramnathv/slidify')
devtools::install_github(pkgs)
search()
library(slidify)
search()
find_rtools()
library(swirl)
swirl()
TRUE == TRUE
(FALSE = TRUE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
sumit()
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
sumbmit()
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1})
evaluate(function(x){x+1},6)
evaluate(function(x){x[[1]]}, c(8,4,0))
evaluate(function(x){tail(x,1), c(8,4,0))
evaluate(function(x){tail(x,1)}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
redo
submit()
submit()
backsolve()
submit()
submit()
submit()
submit()
submit()
skip()
telegram("Good", "morning'")
submit()
submit()
mad_libs(place = "Luebeck", adjective = "nice", noun = "Sibylle")
submit()
"I"%p%"love"%p%"R!"
version
library()
swirl()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time)(), t1, units = 'days')
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
viewinfo()
class()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls-list)
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11;17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag-colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shades, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique-vals <- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
viewinfo(flags)
viewinfo(flag)
viewinfo(flags)
viewinfo()
head(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
?table
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data("iris')
data("iris")
head(iris)
tapply(iris$Sepal.Length, Species, mean)
tapply(iris$Sepal.Length, 'Species', mean)
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
colMean(iris)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
?apply
apply(iris[, 1:4], 2, mean)
data(mtcars)
head(mtcars)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
?with
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls
n
ls
exit
ex
nx
ls
12
l1
? <<
setwd("C:/Users/Christian/datasciencecoursera/R_Programs")
source('cachematrix.R')
a <- matrix(c(2,2,2,2), nrow = 2, nol = 2)
a <- matrix(c(2,2,2,2), nrow = 2, ncol = 2)
mycache <- makeCacheMatrix(a)
cachesolve(a)
cacheSolve(a)
cacheSolve(mycache)
a <- matrix(1:4, nrow = 2, col = 2)
a <- matrix(1:4, nrow = 2, ncol = 2)
mycache <- makeCacheMatrix(a)
cacheSolve(mycache)
cacheSolve(mycache)
cacheSolve(mycache)
source('cachematrix.R')
cacheSolve(mycache)
cacheSolve(mycache)
a <- matrix(5:8, nrow = 2, ncol = 2)
mycache <- makeCacheMatrix(a)
cacheSolve(mycache)
cacheSolve(mycache)
a
